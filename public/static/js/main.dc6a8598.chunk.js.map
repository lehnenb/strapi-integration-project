{"version":3,"sources":["CustomBreadcrumbs.js","Home.js","Services.js","Nursery.js","Voluntary.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["getSelectedSections","path","createBrowserHistory","location","pathname","isRoot","includes","sections","key","content","href","filter","RegExp","test","undefined","active","slice","length","map","s","link","CustomBreadcrumbs","Breadcrumb","icon","Home","id","Container","Segment","placeholder","Header","as","Divider","horizontal","post","uri","payload","a","fetch","method","body","JSON","stringify","headers","ok","Nursery","useState","name","address","email","phone","description","homeState","setHomeState","success","error","serviceState","setServiceState","handleChange","field","value","Form","onSubmit","PostNursery","then","r","Message","header","Group","unstackable","widths","Input","label","onChange","e","target","Field","control","TextArea","Button","type","Voluntary","last_name","voluntaryState","setVoluntaryState","handleSubmit","PostVoluntary","App","props","src","Menu","Item","to","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.dc6a8598.chunk.js","sourcesContent":["import React from 'react';\nimport { Breadcrumb } from 'semantic-ui-react';\nimport { createBrowserHistory } from 'history';\n\nfunction getSelectedSections() {\n  const path = createBrowserHistory().location.pathname;\n  const isRoot = ['', '/'].includes(path);\n  const sections = (!isRoot) ? [\n    { key: 'Voluntary', content: 'Cadastrar Voluntário', href: '/addVoluntary' },\n    { key: 'Nursery', content: 'Cadastrar Lar de Idosos', href: '/addHome' },\n  ]\n  .filter(({ href }) => new RegExp(path).test(href)) : [];\n\n  return [\n    { key: 'Home', content: 'Home', href: (!isRoot) ? '/' : undefined, active: isRoot  },\n    ...(sections.slice(0, sections.length - 2).map((s) => ({ ...s, active: false }))),\n    ...(sections.slice(-1).map((s) => ({ ...s, active: true, link: false, href: undefined }))),\n  ];\n}\n\nfunction CustomBreadcrumbs() {\n  return (\n    <Breadcrumb icon='right angle' sections={getSelectedSections()} />\n  );\n}\n\nexport default CustomBreadcrumbs;\n","import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport {\n Header,\n Menu,\n Container,\n Segment,\n Divider,\n} from 'semantic-ui-react';\nimport CustomBreadcrumbs from './CustomBreadcrumbs'\n\nfunction Home() {\n  return (\n    <div id=\"content\">\n      <CustomBreadcrumbs />\n      <Container id=\"rules\">\n      <Segment placeholder>\n          <Header as='h2'>Regras de Inscrição</Header>\n          <p>\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n            ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n            magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n            ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n            quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n            arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.\n            Nullam dictum felis eu pede link mollis pretium. Integer tincidunt. Cras\n            dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.\n            Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.\n            Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus\n            viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet.\n            Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi.\n          </p>\n      </Segment>\n      </Container>\n      <Divider horizontal>---</Divider>\n      <Container id=\"options\">\n      <Segment placeholder>\n          <Header as='h2'>Opções de voluntariado</Header>\n          <p>\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n            ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n            magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n            ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n            quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n            arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.\n            Nullam dictum felis eu pede link mollis pretium. Integer tincidunt. Cras\n            dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.\n            Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.\n            Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus\n            viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet.\n            Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi.\n          </p>\n      </Segment>\n      </Container>\n  </div>\n  );\n}\n\nexport default Home;\n","async function post(uri, payload) {\n  const baseURL = '/';\n  return fetch(baseURL + uri, {\n    method: 'POST',\n    body: JSON.stringify(payload),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport async function PostVoluntary(payload) {\n  return (await post('voluntaries', payload)).ok;\n}\n\nexport async function PostNursery(payload) {\n  return (await post('homes', payload)).ok;\n}\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport {\n Header,\n Menu,\n Form,\n Button,\n Container,\n Segment,\n TextArea,\n Message,\n} from 'semantic-ui-react';\n\nimport CustomBreadcrumbs from './CustomBreadcrumbs'\nimport { PostNursery } from './Services';\n\nfunction Nursery() {\n  const [homeState, setHomeState] = useState({ name: '', address: '', email: '', phone: '', description: '' });\n  const [serviceState, setServiceState] = useState({ success: false, error: false });\n  const handleChange = (field, value) => setHomeState({ ...homeState, [field]: value });\n  const handleSubmit = () => {\n    PostNursery(homeState)\n    .then((r) => setServiceState({ success: r, error: !r }));\n  };\n\n  return (\n    <div id=\"content\">\n      <CustomBreadcrumbs />\n      <Container>\n        <Segment id='nursery-form'>\n          <Form success={serviceState.success} error={serviceState.error} onSubmit={handleSubmit}>\n            <Message\n              error\n              header='Erro'\n              content='Um erro ocorreu ao inserir o Voluntário'\n            />\n            <Message\n              success \n              header='Sucesso'\n              content='Voluntário adicionado com sucesso'\n            />\n            <Header>Cadastrar Lar</Header>\n            <Form.Group unstackable widths={2}>\n              <Form.Input label='Nome:' placeholder='Nome' value={homeState.name} onChange={(e) => handleChange('name', e.target.value) } />\n              <Form.Input label='Address:' placeholder='Address:' value={homeState.address} onChange={(e) => handleChange('address', e.target.value) } />\n            </Form.Group>\n            <Form.Group widths={2}>\n              <Form.Input label='e-mail:' placeholder='e-mail' value={homeState.email} onChange={(e) => handleChange('email', e.target.value) } />\n              <Form.Input label='Telefone:' placeholder='Telefone'  value={homeState.phone} onChange={(e) => handleChange('phone', e.target.value) } />\n            </Form.Group>\n            <Form.Group widths={2}>\n              <Form.Field control={TextArea} label=\"Descrição das Atividades de Voluntariado:\" placeholder=\"Digite a descrição\" value={homeState.description} onChange={(e) => handleChange('description', e.target.value) }/>\n            </Form.Group>\n            <Button type='submit'>Enviar</Button>\n        </Form>\n      </Segment>\n     </Container>\n  </div>\n  );\n}\n\nexport default Nursery;\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport { \n  BrowserRouter as Router, \n  Route, \n  Link \n} from 'react-router-dom';\n\nimport {\n Header,\n Menu,\n Form,\n Button,\n Container,\n TextArea,\n Segment,\n Message\n} from 'semantic-ui-react';\n\nimport CustomBreadcrumbs from './CustomBreadcrumbs';\nimport { PostVoluntary } from './Services';\n\nfunction Voluntary() {\n  const [voluntaryState, setVoluntaryState] = useState({ name: '', last_name: '', email: '', phone: '', description: '' });\n  const [serviceState, setServiceState] = useState({ success: false, error: false });\n  const handleChange = (field, value) => setVoluntaryState({ ...voluntaryState, [field]: value });\n  const handleSubmit = () => {\n    PostVoluntary(voluntaryState)\n      .then((r) => setServiceState({ success: r, error: !r }));\n  };\n\n  return (\n    <div id=\"content\">\n      <CustomBreadcrumbs />\n      <Container>\n        <Segment id='voluntary-form'>\n          <Form onSubmit={handleSubmit} success={serviceState.success} error={serviceState.error} onSubmit={handleSubmit} >\n            <Message\n              error\n              header='Erro'\n              content='Um erro ocorreu ao inserir o Voluntário'\n            />\n            <Message\n              success \n              header='Sucesso'\n              content='Voluntário adicionado com sucesso'\n            />\n            <Header as='h3' >Cadastrar Voluntário</Header>\n            <Form.Group unstackable widths={2}>\n              <Form.Input label='Nome:' placeholder='Nome' value={voluntaryState.name} onChange={(e) => handleChange('name', e.target.value) } />\n              <Form.Input label='Sobrenome:' placeholder='Sobrenome' value={voluntaryState.last_name} onChange={(e) => handleChange('last_name', e.target.value) } />\n            </Form.Group>\n            <Form.Group widths={2}>\n              <Form.Input label='e-mail:' placeholder='e-mail' value={voluntaryState.email} onChange={(e) => handleChange('email', e.target.value) } />\n              <Form.Input label='Telefone:' placeholder='Telefone'  value={voluntaryState.phone} onChange={(e) => handleChange('phone', e.target.value) } />\n            </Form.Group>\n            <Form.Group widths={2}>\n              <Form.Field control={TextArea} label=\"Carta de Apresentação:\" placeholder=\"Digite sua carta de apresentação\" value={voluntaryState.description} onChange={(e) => handleChange('description', e.target.value) }/>\n            </Form.Group>\n            <Button type='submit'>Enviar</Button>\n          </Form>\n        </Segment>\n     </Container>\n  </div>\n  );\n}\n\nexport default Voluntary;\n","import React from 'react';\nimport logo from './logo.svg';\nimport Home from './Home';\nimport Nursery from './Nursery';\nimport Voluntary from './Voluntary';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n Header,\n Menu,\n Form,\n Button,\n Container,\n Segment,\n TextArea,\n} from 'semantic-ui-react';\nimport './App.css';\n\nfunction App(props) {\n  return (\n    <Container id=\"container\" >\n      <Router>\n        <Header id=\"header\" as='h1'>\n          <img src={process.env.PUBLIC_URL + '/teacher_old_education_professor-512.png' } />Meu Velho Amigo\n        </Header> \n        <Menu>\n          <Menu.Item>\n            <Link to='/'>Home</Link>\n          </Menu.Item>\n          <Menu.Item>\n              <Link to='/addVoluntary'>Cadastrar Voluntário</Link>\n          </Menu.Item> \n          <Menu.Item>\n              <Link to='/addHome'>Cadastrar Lar de Idosos</Link>\n          </Menu.Item>\n        </Menu>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/addHome\" component={Nursery} />\n        <Route path=\"/addVoluntary\" component={Voluntary} />\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}